name: Build and Push Microservices

on:
  push:
    branches:
      - master  # Adjust the branch you want to trigger this workflow

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
        if: success()

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        if: success()
      
      

      # - name: Build and push images
      #   run: |
      #     for service in adservice checkoutservice currencyservice emailservice frontend loadgenerator paymentservice productcatalogservice recommendationservice; do
           
      #       cd src/$service
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/$service:latest -f Dockerfile . --push
      #       cd ..
      #     done
      #   if: success()
      


      # - name: Build checkoutservice
      #   run: |
      #       cd src/checkoutservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/checkoutservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

      # - name: Build currencyservice
      #   run: |
      #       cd src/currencyservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/currencyservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

      # - name: Build emailservice
      #   run: |
      #       cd src/emailservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/emailservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

      # - name: Build frontend
      #   run: |
      #       cd src/frontend
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/frontend:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

   
          
      # - name: Build paymentservice
      #   run: |
      #       cd src/paymentservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/paymentservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()
      
      # - name: Build productcatalogservice
      #   run: |
      #       cd src/productcatalogservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/productcatalogservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

      # - name: Build recommendationservice
      #   run: |
      #       cd src/recommendationservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/recommendationservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()

    
      # - name: Build adservice
      #   run: |
      #       cd src/adservice
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/adservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()
      # - name: Build loadgenerator
      #   run: |
      #        cd src/loadgenerator
      #        docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/loadgenerator:latest -f Dockerfile . --push
      #        cd ..
      #   if: success()

      # - name: Build cartservice
      #   run: |
      #       cd src/cartservice/src
      #       docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/cartservice:latest -f Dockerfile . --push
      #       cd ..
      #   if: success()
      - name: Build shippingservice
        run: |
            cd src/shippingservice
            docker buildx build --platform linux/amd64,linux/arm64 -t ristabel/shippingservice:latest -f Dockerfile . --push
            cd ..
        if: success()

